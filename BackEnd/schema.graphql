scalar Date

type Query {
    login(username: String!, password: String!): Login
    film(film_id: Int): Film
    films(offset: Int = 0, limit: Int = 10): FilmsResult
    films_search(title: String!, offset: Int = 0, limit: Int = 10): FilmsResult
    films_category(category_id: Int, offset: Int = 0, limit: Int = 10): FilmsResult
    films_user(customer_id: Int, offset: Int = 0, limit: Int = 10): FilmsResult
    films_user_rental_date(customer_id: Int, offset: Int = 0, limit: Int = 10): FilmsResult
    films_user_title (customer_id: Int, offset: Int = 0, limit: Int = 10): FilmsResult
    films_user_genre (customer_id: Int, offset: Int = 0, limit: Int = 10): FilmsResult
    categories: [Category]
    stores_available(film_id: Int): [Store]
    actors(film_id: Int): [Actor]
}

type Login {
    customer_id: Int
    username: String
    token: String
}

type Film {
    film_id: Int
    title: String
    description: String
    release_year: String
    rental_duration: String
    rental_rate: String
    length: String
    replacement_cost: String
    rating: String
    special_features: String
    fulltext: String
    genre: String
    language: String
    return_date: Date!
    inventory_id: String
    store_id: String
    customer_id: String
    rental_date: Date!
}

type FilmsResult {
    count: Int
    films: [Film]
}

type Category {
    category_id: Int
    name: String
}

type Store {
    store_id: Int
    city: String
    address: String
}

type Actor {
    actor_id: Int
    first_name: String
    last_name: String
}
